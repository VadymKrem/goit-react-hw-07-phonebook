{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, fetchContacts } from './operations';\n\nconst handleOnPending = state => {\n  state.isLoading = true;\n};\n\nconst handleOnRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nconst contactsInitialState = {\n  items: [],\n  isLoading: false,\n  error: null\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: contactsInitialState,\n  extraReducers: {\n    [fetchContacts.pending]: handleOnPending,\n\n    [fetchContacts.fulfilled](state, action) {\n      state.items = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n\n    [fetchContacts.rejected]: handleOnRejected,\n    [addContact.pending]: handleOnPending,\n\n    [addContact.fulfilled](state, action) {\n      state.items.push(action.payload);\n      state.isLoading = false;\n      state.error = null;\n    },\n\n    [addContact.rejected]: handleOnRejected,\n    [deleteContact.pending]: handleOnPending,\n\n    [deleteContact.fulfilled](state, action) {\n      const index = state.items.findIndex(task => task.id === action.payload.id);\n      state.items.splice(index, 1);\n      state.isLoading = false;\n      state.error = null;\n    },\n\n    [deleteContact.rejected]: handleOnRejected\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-07-phonebook/src/Redux/phonebookSlice.js"],"names":["createSlice","addContact","deleteContact","fetchContacts","handleOnPending","state","isLoading","handleOnRejected","action","error","payload","contactsInitialState","items","contactsSlice","name","initialState","extraReducers","pending","fulfilled","rejected","push","index","findIndex","task","id","splice","contactsReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,QAAyD,cAAzD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BA,EAAAA,KAAK,CAACC,SAAN,GAAkB,IAAlB;AACD,CAFD;;AAIA,MAAMC,gBAAgB,GAAG,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAC1CH,EAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACAD,EAAAA,KAAK,CAACI,KAAN,GAAcD,MAAM,CAACE,OAArB;AACD,CAHD;;AAKA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAE,EADoB;AAE3BN,EAAAA,SAAS,EAAE,KAFgB;AAG3BG,EAAAA,KAAK,EAAE;AAHoB,CAA7B;AAMA,MAAMI,aAAa,GAAGb,WAAW,CAAC;AAChCc,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAEJ,oBAFkB;AAGhCK,EAAAA,aAAa,EAAE;AACb,KAACb,aAAa,CAACc,OAAf,GAAyBb,eADZ;;AAEb,KAACD,aAAa,CAACe,SAAf,EAA0Bb,KAA1B,EAAiCG,MAAjC,EAAyC;AACvCH,MAAAA,KAAK,CAACO,KAAN,GAAcJ,MAAM,CAACE,OAArB;AACAL,MAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACAD,MAAAA,KAAK,CAACI,KAAN,GAAc,IAAd;AACD,KANY;;AAOb,KAACN,aAAa,CAACgB,QAAf,GAA0BZ,gBAPb;AASb,KAACN,UAAU,CAACgB,OAAZ,GAAsBb,eATT;;AAUb,KAACH,UAAU,CAACiB,SAAZ,EAAuBb,KAAvB,EAA8BG,MAA9B,EAAsC;AACpCH,MAAAA,KAAK,CAACO,KAAN,CAAYQ,IAAZ,CAAiBZ,MAAM,CAACE,OAAxB;AACAL,MAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACAD,MAAAA,KAAK,CAACI,KAAN,GAAc,IAAd;AACD,KAdY;;AAeb,KAACR,UAAU,CAACkB,QAAZ,GAAuBZ,gBAfV;AAiBb,KAACL,aAAa,CAACe,OAAf,GAAyBb,eAjBZ;;AAkBb,KAACF,aAAa,CAACgB,SAAf,EAA0Bb,KAA1B,EAAiCG,MAAjC,EAAyC;AACvC,YAAMa,KAAK,GAAGhB,KAAK,CAACO,KAAN,CAAYU,SAAZ,CACZC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYhB,MAAM,CAACE,OAAP,CAAec,EADvB,CAAd;AAGAnB,MAAAA,KAAK,CAACO,KAAN,CAAYa,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACAhB,MAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACAD,MAAAA,KAAK,CAACI,KAAN,GAAc,IAAd;AACD,KAzBY;;AA0Bb,KAACP,aAAa,CAACiB,QAAf,GAA0BZ;AA1Bb;AAHiB,CAAD,CAAjC;AAiCA,OAAO,MAAMmB,eAAe,GAAGb,aAAa,CAACc,OAAtC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, fetchContacts } from './operations';\r\n\r\nconst handleOnPending = state => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleOnRejected = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst contactsInitialState = {\r\n  items: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: contactsInitialState,\r\n  extraReducers: {\r\n    [fetchContacts.pending]: handleOnPending,\r\n    [fetchContacts.fulfilled](state, action) {\r\n      state.items = action.payload;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [fetchContacts.rejected]: handleOnRejected,\r\n\r\n    [addContact.pending]: handleOnPending,\r\n    [addContact.fulfilled](state, action) {\r\n      state.items.push(action.payload);\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [addContact.rejected]: handleOnRejected,\r\n\r\n    [deleteContact.pending]: handleOnPending,\r\n    [deleteContact.fulfilled](state, action) {\r\n      const index = state.items.findIndex(\r\n        task => task.id === action.payload.id\r\n      );\r\n      state.items.splice(index, 1);\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [deleteContact.rejected]: handleOnRejected,\r\n  },\r\n});\r\n\r\nexport const contactsReducer = contactsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}