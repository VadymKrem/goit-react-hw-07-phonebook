{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-07-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsList } from 'Redux/selectors';\nimport { addContact } from 'Redux/operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = () => {\n  _s();\n\n  // const [name, setName] = useState('');\n  // const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const dataSubmitForm = event => {\n    event.preventDefault();\n    const formName = event.target.elements.name.value;\n    const formNumber = event.target.elements.number.value;\n    const searchContact = contacts.find(contact => contact.name === formName);\n\n    if (searchContact) {\n      alert(`${formName} is already in contacts`);\n      return false;\n    } // dispatch(addContact({ name, number }));\n    // setName('');\n    // setNumber('');\n\n\n    dispatch(addContact({\n      name: formName,\n      phone: formNumber\n    }));\n    event.target.reser();\n  }; // const handleChangeName = event => setName(event.target.value);\n  // const handleChangeNumber = event => setNumber(event.target.value);\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: dataSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"name\",\n        value: contacts.name // onChange={handleChangeName}\n        ,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' \\\\-][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"tel\",\n        name: \"number\",\n        value: contacts.number // onChange={handleChangeNumber}\n        ,\n        pattern: \"\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"sydSEEMVkiloeUptxkxmL6nxG7A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","Form","Label","Input","Button","useDispatch","useSelector","selectContactsList","addContact","ContactForm","dispatch","contacts","dataSubmitForm","event","preventDefault","formName","target","elements","name","value","formNumber","number","searchContact","find","contact","alert","phone","reser"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,QAA2C,sBAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B;AACA;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGL,WAAW,CAACC,kBAAD,CAA5B;;AAEA,QAAMK,cAAc,GAAGC,KAAK,IAAI;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,IAAtB,CAA2BC,KAA5C;AACA,UAAMC,UAAU,GAAGP,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBI,MAAtB,CAA6BF,KAAhD;AAEA,UAAMG,aAAa,GAAGX,QAAQ,CAACY,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACN,IAAR,KAAiBH,QAA1C,CAAtB;;AACA,QAAIO,aAAJ,EAAmB;AACjBG,MAAAA,KAAK,CAAE,GAAEV,QAAS,yBAAb,CAAL;AACA,aAAO,KAAP;AACD,KAV6B,CAW9B;AACA;AACA;;;AACAL,IAAAA,QAAQ,CAACF,UAAU,CAAC;AAAEU,MAAAA,IAAI,EAAEH,QAAR;AAAkBW,MAAAA,KAAK,EAAEN;AAAzB,KAAD,CAAX,CAAR;AACAP,IAAAA,KAAK,CAACG,MAAN,CAAaW,KAAb;AACD,GAhBD,CAN+B,CAuB/B;AACA;;;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEf,cAAhB;AAAA,4BACE,QAAC,KAAD;AAAA,sCAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAED,QAAQ,CAACO,IAHlB,CAIE;AAJF;AAKE,QAAA,OAAO,EAAC,0HALV;AAME,QAAA,KAAK,EAAC,wIANR;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,KAAD;AAAA,wCAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAEP,QAAQ,CAACU,MAHlB,CAIE;AAJF;AAKE,QAAA,OAAO,EAAC,oGALV;AAME,QAAA,KAAK,EAAC,8FANR;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAyBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtDM;;GAAMZ,W;UAGMJ,W,EACAC,W;;;KAJNG,W","sourcesContent":["import { useState } from 'react';\r\n\r\nimport { Form, Label, Input, Button } from './ContactForm.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContactsList } from 'Redux/selectors';\r\nimport { addContact } from 'Redux/operations';\r\n\r\nexport const ContactForm = () => {\r\n  // const [name, setName] = useState('');\r\n  // const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectContactsList);\r\n\r\n  const dataSubmitForm = event => {\r\n    event.preventDefault();\r\n\r\n    const formName = event.target.elements.name.value;\r\n    const formNumber = event.target.elements.number.value;\r\n\r\n    const searchContact = contacts.find(contact => contact.name === formName);\r\n    if (searchContact) {\r\n      alert(`${formName} is already in contacts`);\r\n      return false;\r\n    }\r\n    // dispatch(addContact({ name, number }));\r\n    // setName('');\r\n    // setNumber('');\r\n    dispatch(addContact({ name: formName, phone: formNumber }));\r\n    event.target.reser();\r\n  };\r\n  // const handleChangeName = event => setName(event.target.value);\r\n  // const handleChangeNumber = event => setNumber(event.target.value);\r\n  return (\r\n    <Form onSubmit={dataSubmitForm}>\r\n      <Label>\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={contacts.name}\r\n          // onChange={handleChangeName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={contacts.number}\r\n          // onChange={handleChangeNumber}\r\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}